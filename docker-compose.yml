version: '3'
services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  # api is the Express server in this setup
  # with code in ./server/ dir
  api:
    build: 
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      # This means node_modules inside /app in container will not 
      # get mapped to the node_modules in host machine
      - /app/node_modules
      - ./server:/app
    environment:
      # host is just the name of the redis service in this file
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # Get these env var values from pg docs
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  # React code is in ./client dir
  client:
    # stdin_open is needed otherwise, you will get a 
    # "React App exited with Code 0" error in your terminal 
    # when we attempt to start up the application.
    stdin_open: true
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '4040:80'
